- name: Install dependencies
  hosts: all
  become: true
  gather_facts: true
  tasks:
    - name: Install docker dependencies
      ansible.builtin.apt:
        name: '{{ item }}'
        state: present
        update_cache: true
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - pip
        - python3-jsondiff
      become: true

    - name: Install bottle python package
      ansible.builtin.pip:
        name: docker
      become: true

    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: true

    - name: Add Docker's official APT repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present
      become: true

    - name: Install Docker
      ansible.builtin.apt:
        name: docker-ce
        state: present
    #     update_cache: true
      become: true


- name: Configure Docker Swarm Master
  hosts: master
  become: true
  gather_facts: false

  tasks:
    - name: Initialize Docker Swarm
      community.docker.docker_swarm:
        state: present
        advertise_addr: "{{ ansible_host }}"
        listen_addr: "0.0.0.0"
      register: master_output

- name: Configure Docker Swarm Worker
  hosts: worker
  become: true
  gather_facts: false

  tasks:
    - name: Join Docker Swarm
      community.docker.docker_swarm:
        state: join
        join_token: "{{ hostvars[groups['master'][0]].master_output.swarm_facts.JoinTokens.Worker }}"
        advertise_addr: "{{ ansible_host }}"
        remote_addrs: "{{ hostvars[groups['master'][0]].inventory_hostname }}"

- name: Configure Global Stack
  hosts: master
  become: true
  gather_facts: false
  vars:
    tmp_dir: '/tmp/work/'
  tasks:
    - name: Create traefik network
      community.docker.docker_network:
        name: traefik-public
        driver: overlay

    - name: Creates working directory
      ansible.builtin.file:
        path: '{{ tmp_dir }}'
        state: directory
        mode: '0644'

    - name: Create config file for fluentbit
      ansible.builtin.copy:
        dest: '{{ tmp_dir }}fluent-bit.conf'
        content: |
          [INPUT]
            Name        forward
            Listen      0.0.0.0
            Port        24224

          [OUTPUT]
            Name http
            Match *
            URI /api/default/default/_json
            Host {{ openobserve_host }}
            Port 5080
            tls Off
            Format json
            Json_date_key    _timestamp
            Json_date_format iso8601
            HTTP_User {{ openobserve_fluentbit_username }}
            HTTP_Passwd {{ openobserve_fluentbit_password }}
            compress gzip
        mode: '0644'
      # become: true

    - name: Add fluentbit config to docker swarm
      community.docker.docker_config:
        name: fluentbit
        data_src: '{{ tmp_dir }}fluent-bit.conf'
        state: present

    - name: Copy source files for stack
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: '0644'
      loop:
        - src: docker-compose.global.yml
          dest: /tmp/work/docker-compose.global.yml

    - name: Deploy stack to swarm from a compose file
      community.docker.docker_stack:
        name: global
        compose:
          - /tmp/work/docker-compose.global.yml
      environment:
        ZO_ROOT_USER_EMAIL: "{{ ZO_ROOT_USER_EMAIL }}"
        ZO_ROOT_USER_PASSWORD: "{{ ZO_ROOT_USER_PASSWORD }}"
        TRAEFIK_DASHBOARD_URL: "{{ TRAEFIK_DASHBOARD_URL }}"
      timeout: 180
