---
- name: Build and create tar
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Log into DockerHub
      community.docker.docker_login:
        username: '{{ image_registry_username }}'
        password: '{{ image_registry_password }}'

    - name: Build
      community.docker.docker_image:
        name: '{{ app_name }}'
        build:
          path: ./
        source: build
        state: present
        tag: '{{ image_tag }}'
      delegate_to: localhost

    - name: Gather the package facts
      ansible.builtin.package_facts:
        manager: auto

    # - name: Print the package facts
    #   ansible.builtin.debug:
    #     var: ansible_facts.packages

    - name: Check if trivy is installed
      ansible.builtin.debug:
        msg: "{{ ansible_facts.packages['trivy'] | length }} versions of trivy are installed!"
      when: "'trivy' in ansible_facts.packages"

    - name: Scan image
      ansible.builtin.command:
        cmd: 'trivy image -s HIGH,CRITICAL {{ app_name }}:{{ image_tag }}'
      register: scan_output # <- Registers the command output.
      changed_when: scan_output.rc != 0 # <- Uses the return code to define when the task has changed.

    - name: Scan output
      ansible.builtin.debug:
        var: scan_output

    - name: Tag and push to image registry
      community.docker.docker_image:
        name: '{{ app_name }}:{{ image_tag }}'
        repository: '{{ image_repository }}/{{ app_name }}:{{ image_tag }}'
        push: true
        source: local

    - name: Log out of DockerHub
      community.docker.docker_login:
        state: absent

- name: Deploy
  hosts: master
  become: true
  gather_facts: false
  vars:
    docker_image: '{{ image_repository }}/{{ app_name }}:{{ image_tag }}'
  tasks:
    - name: Creates working directory
      ansible.builtin.file:
        path: '/tmp/{{ app_name }}/'
        state: directory
        mode: '0644'

    - name: Create fluent bit config
      ansible.builtin.template:
        src: docker-compose.yml.j2
        dest: /tmp/{{ app_name }}/docker-compose.yml
        mode: '0644'

    - name: Log into DockerHub
      community.docker.docker_login:
        username: '{{ image_registry_username }}'
        password: '{{ image_registry_password }}'
      become: true

    - name: Pull image
      community.docker.docker_image:
        name: '{{ docker_image }}'
        state: present
        source: pull
      become: true

    - name: Log out of DockerHub
      community.docker.docker_login:
        state: absent
      become: true

    - name: Deploy stack to swarm from a compose file
      community.docker.docker_stack:
        name: 'mystack_{{ app_name }}_{{ image_tag  }}'
        compose:
          - /tmp/{{ app_name }}/docker-compose.yml
          # - version: '3.3'
          #   services:
          #     app:
          #       image: '{{ docker_image }}'
      timeout: 180

    - name: Remove tmp files
      ansible.builtin.file:
        path: '{{ item }}'
        state: absent
      loop:
        - '/tmp/{{ app_name }}/docker-compose.yml'
